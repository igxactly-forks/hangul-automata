#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'project2/regex.rex'

class RegularExpression < Racc::Parser

module_eval(<<'...end regex.racc/module_eval...', 'regex.racc', 23)

...end regex.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
     5,     5,     5,     6,     6,     6,     5,     5,    10,     6,
     6,     8,     8,    14,    12,    10,     7 ]

racc_action_check = [
     0,    13,     8,     0,    13,     8,     3,     5,     9,     3,
     5,    11,     2,    11,     7,     4,     1 ]

racc_action_pointer = [
    -3,    16,    10,     3,    10,     4,   nil,    14,    -1,     3,
   nil,     9,   nil,    -2,   nil ]

racc_action_default = [
    -2,   -10,    -1,    -4,    -6,   -10,    -9,   -10,   -10,    -5,
    -8,   -10,    15,    -3,    -7 ]

racc_goto_table = [
     9,     2,    13,     1,   nil,   nil,    11,   nil,   nil,   nil,
     9 ]

racc_goto_check = [
     4,     2,     3,     1,   nil,   nil,     2,   nil,   nil,   nil,
     4 ]

racc_goto_pointer = [
   nil,     3,     1,    -6,    -3 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 8, :_reduce_none,
  0, 8, :_reduce_2,
  3, 9, :_reduce_3,
  1, 9, :_reduce_none,
  2, 10, :_reduce_5,
  1, 10, :_reduce_none,
  3, 11, :_reduce_7,
  2, 11, :_reduce_8,
  1, 11, :_reduce_none ]

racc_reduce_n = 10

racc_shift_n = 15

racc_token_table = {
  false => 0,
  :error => 1,
  "|" => 2,
  "(" => 3,
  ")" => 4,
  "*" => 5,
  :SYMBOL => 6 }

racc_nt_base = 7

racc_use_result_var = false

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"|\"",
  "\"(\"",
  "\")\"",
  "\"*\"",
  "SYMBOL",
  "$start",
  "target",
  "exp",
  "factor",
  "term" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'regex.racc', 4)
  def _reduce_2(val, _values)
     {} 
  end
.,.,

module_eval(<<'.,.,', 'regex.racc', 6)
  def _reduce_3(val, _values)
     {"|" => [val[0], val[2]]} 
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'regex.racc', 9)
  def _reduce_5(val, _values)
     {"." => [val[0], val[1]]} 
  end
.,.,

# reduce 6 omitted

module_eval(<<'.,.,', 'regex.racc', 12)
  def _reduce_7(val, _values)
     val[1] 
  end
.,.,

module_eval(<<'.,.,', 'regex.racc', 13)
  def _reduce_8(val, _values)
     {"*" => val[0]} 
  end
.,.,

# reduce 9 omitted

def _reduce_none(val, _values)
  val[0]
end

end   # class RegularExpression


